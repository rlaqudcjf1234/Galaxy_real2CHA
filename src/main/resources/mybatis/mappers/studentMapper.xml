<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.galaxy.mapper.StudentMapper">

    <!-- 검색 조건 SQL -->
    <sql id="studentSearch">
        <where>
            <if test="text != null and text != ''">
                <choose>
                    <when test="select == 'name'">
                        AND S.NAME LIKE '%' || TRIM(#{text}) || '%'
                    </when>
                    <when test="select == 'class'">
                        AND (L.NAME || '(' || C.ROUND || '기)') LIKE '%' || TRIM(#{text}) || '%'
                    </when>
                </choose>
            </if>
            <if test="classSeq != null and classSeq != ''">
                AND S.CLASS_SEQ = #{classSeq}
            </if>
            <if test="lectureSeq != null and lectureSeq != ''">
                AND C.LECTURE_SEQ = #{lectureSeq}
            </if>
            <if test="round != null and round != ''">
                AND C.ROUND = #{round}
            </if>
        </where>
    </sql>

    <select id="selectCount" resultType="int">
        SELECT COUNT(*)
        FROM STUDENT S
        JOIN CLASS C ON S.CLASS_SEQ = C.SEQ
        JOIN LECTURE L ON C.LECTURE_SEQ = L.SEQ
        <include refid="studentSearch"/>
    </select>

    <select id="selectList" resultType="map">
        SELECT 
            S.SEQ, 
            S.ID, 
            S.CLASS_SEQ, 
            S.JUMIN, 
            S.NAME, 
            S.EMAIL, 
            S.PHONE, 
            S.REG_DATE,
            (L.NAME || '(' || C.ROUND || '기)') AS CLASS_NAME
        FROM STUDENT S
        JOIN CLASS C ON S.CLASS_SEQ = C.SEQ
        JOIN LECTURE L ON C.LECTURE_SEQ = L.SEQ
        <include refid="studentSearch"/>
        ORDER BY S.SEQ DESC
        OFFSET #{offset} ROWS FETCH NEXT #{pageSize} ROWS ONLY
    </select>

    <select id="studentRead" parameterType="int" resultType="map">
        SELECT 
            S.SEQ, 
            S.CLASS_SEQ, 
            S.JUMIN, 
            S.NAME, 
            S.EMAIL, 
            S.PHONE, 
            S.REG_DATE,
            S.REAL_ZIPCODE, 
            S.REAL_ADDRESS1, 
            S.REAL_ADDRESS2, 
            S.ZIPCODE, 
            S.ADDRESS1, 
            S.ADDRESS2, 
            S.PATH, 
            S.ID,
            (L.NAME || '(' || C.ROUND || '기)') AS CLASS_NAME
        FROM STUDENT S
        JOIN CLASS C ON S.CLASS_SEQ = C.SEQ
        JOIN LECTURE L ON C.LECTURE_SEQ = L.SEQ
        WHERE S.SEQ = #{seq}
    </select>

</mapper>
